name: CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
      - 'feat/fall-update'

env:
  DATABASE_URL: postgres://user:password@127.0.0.1:5432/database
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password
  POSTGRES_DB: database
  POSTGRES_HOST: 127.0.0.1

jobs:
  web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.18.0

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Test
        run: cd web && yarn test
      
      - name: Build
        run: cd web && yarn build

  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: database
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.18.0

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Test
        run: cd backend && yarn migrate && yarn test

      - name: Build
        run: cd backend && yarn build

  backend-go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend-go
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: database
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.2

      - name: Setup DB
        run: psql -h ${{ env.POSTGRES_HOST }} -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }} -a -f backend-go/scripts/db/dump.sql
        env:
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}

      - name: Install
        run: cd backend-go && make install && make generate

      - name: Test
        run: cd backend-go && make test

      - name: Build
        run: cd backend-go && make build
